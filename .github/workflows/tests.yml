name: Otus homework tests

on:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ~1.19

      - name: Check out code
        uses: actions/checkout@v3

      - name: Linters
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.53.3

  tests:
    runs-on: ubuntu-latest

    services:
        # Label used to access the service container
        postgres:
          # Docker Hub image
          image: postgres
          # Provide the password for postgres
          env:
            POSTGRES_PASSWORD: postgres
          # Set health checks to wait until postgres has started
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
          ports:
            # Maps tcp port 5432 on service container to the host
            - 5432:5432

    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.19

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Run migrations
      run: psql -f docker-entrypoint-initdb.d/filldb.sql postgresql://postgres:postgres@localhost:5432/postgres

    - name: Build
      run: go build -v -o serverapp ./server/server.go

    - name: Test
      run: go test -race -count 1 -v ./server
      env: 
        DATABASE_DSN: "user=postgres host=localhost password=postgres port=5432 database=postgres sslmode=disable"